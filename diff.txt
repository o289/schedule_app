diff --git a/frontend/src/pages/schedules/useDateTime.js b/frontend/src/pages/schedules/useDateTime.js
index f3eac8c..b3c9f61 100644
--- a/frontend/src/pages/schedules/useDateTime.js
+++ b/frontend/src/pages/schedules/useDateTime.js
@@ -1,5 +1,9 @@
 import { useState, useEffect } from "react";
-import { getNowDateTime, getNowPlusOneHour } from "../../utils/date";
+import {
+  formatLocalDateTime,
+  getNowDateTime,
+  getNowPlusOneHour,
+} from "../../utils/date";
 
 export function useDateTime(schedules) {
   const [selectedDate, setSelectedDate] = useState(null);
@@ -34,7 +38,6 @@ export function useDateTime(schedules) {
 }
 
 // scheduleのdatesに追加するための関数
-//
 export function handleDateTime(formData, onChange) {
   const [dates, setDates] = useState(
     formData.dates && formData.dates.length > 0
@@ -57,6 +60,16 @@ export function handleDateTime(formData, onChange) {
     onChange({ target: { name: "dates", value: newDates } });
   };
 
+  // スタートの日付・時刻がエンドより後である場合にエンドをスタートの1時間後に固定する
+  // スタートがエンドより後にも関わらず入力されてしまうのをを防止
+  useEffect(() => {
+    if (tempStart > tempEnd) {
+      const start = new Date(tempStart);
+      const end = new Date(start.getTime() + 60 * 60 * 1000);
+      setTempEnd(formatLocalDateTime(end));
+    }
+  }, [tempStart]);
+
   const addDate = () => {
     if (!tempStart || !tempEnd) return;
     const newDate = { start_date: tempStart, end_date: tempEnd };
diff --git a/frontend/src/utils/date.js b/frontend/src/utils/date.js
index 121e22f..7d0cb56 100644
--- a/frontend/src/utils/date.js
+++ b/frontend/src/utils/date.js
@@ -1,3 +1,9 @@
+/*
+利用方法:
+formatDatePart(isoString, "datetime") // 年月日時分を返す（デフォルト）
+formatDatePart(isoString, "date")     // 年月日を返す
+formatDatePart(isoString, "time")     // 時分のみを返す
+*/
 export function formatDateTime(isoString, mode = "datetime") {
   const date = new Date(isoString);
   switch (mode) {
@@ -26,20 +32,16 @@ export function formatDateTime(isoString, mode = "datetime") {
 }
 
 /*
-利用方法:
-formatDatePart(isoString, "datetime") // 年月日時分を返す（デフォルト）
-formatDatePart(isoString, "date")     // 年月日を返す
-formatDatePart(isoString, "time")     // 時分のみを返す
+--- 日付補助関数 ---
+SafariでtoISOString()を使うとUTCに変換されてしまい、
+<input type="datetime-local"> にセットできなくなる。
+そこで、手動で「YYYY-MM-DDTHH:mm」形式の文字列を作る。
+
+重複処理をまとめた共通関数
+→ どんなDateオブジェクトでも安全にローカル時刻フォーマットできる
 */
 
-// --- 日付補助関数 ---
-// SafariでtoISOString()を使うとUTCに変換されてしまい、
-// <input type="datetime-local"> にセットできなくなる。
-// そこで、手動で「YYYY-MM-DDTHH:mm」形式の文字列を作る。
-//
-// 重複処理をまとめた共通関数
-// → どんなDateオブジェクトでも安全にローカル時刻フォーマットできる
-function formatLocalDateTime(date) {
+export function formatLocalDateTime(date) {
   const year = date.getFullYear();
   const month = String(date.getMonth() + 1).padStart(2, "0");
   const day = String(date.getDate()).padStart(2, "0");
